# System
---Put in some simple debug tools (click cell to turn it into wall, disable fog of war, etc...)
---Change renderer to use tile coordinates to render instead of pixels (will be easier to do UI)
--Create text class which stores string itself along with color (create syntax for coloring parts of string?)
-Start working on JSON reader for actor and item database

# Interface
---Cache actors last known positions for when cells are not visible, but known.
--Redo gamelogs to have vector of above mentioned text objects.

# Map Generation
--Make Map generation less hardcoded

# Actor
--Properly implement FSM (currently always set to attack)
---Create functions for calculating values like attack power and damage received, as well as determining if a target is an enemy.
---Implement some sort of action points or stamina system which actors gain each turn.
   This would allow actors to have different movement speeds.
   Some may not act every n turns, while some may move multiple cells at once.

   NEW:

   Work on renderer next
	Access MapSystem to draw walls and floors (later the visibility too)
	Cycle through all renderable entities and render based on their position (renderable position later for animations)

   Create components to represent original OOP actor class
	Position (x, y)
	Renderable (index, render x, render y)
	Health(int hp)
	Sight(distance)
	Faction(string faction)
	StatusCondition (int damage (for now))