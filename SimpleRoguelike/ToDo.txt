NEXT:
	Create animation system (new design)
		Any entity that can animate has Animation component
		Also has component specific to animation (idle, moving, attack)

		Renderer loops through all entities with Animation component and handles animation in order of priority (Move is more important than idle)
		each step it moves progress variable in animation forward
		if not set to loop, remove component after progress is done

		When moving an entity, add MoveAnim component to entity
		Also keep track of pending animations in Renderer (list of enum AnimType). Add to when adding these components.
		When the added AnimType is different to last one (ie, adding attack when last was move) then store that new one somewhere
			then, set a flag so Game remains in Animating state. Once anim are done playing, clear queue and add AnimType that triggered the pause

Work on renderer
	Access MapSystem to draw walls and floors (later the visibility too)
	Cycle through all renderable entities and render based on their position (renderable position later for animations)